generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Company {
  id    Int     @id @default(autoincrement())
  name  String  @db.VarChar(100)
  staff Staff[]
  roles Role[]
}

model Role {
  id          Int              @id @default(autoincrement())
  name        String           @db.VarChar(50)
  description String?          @db.Text
  company     Company          @relation(fields: [companyId], references: [id])
  companyId   Int
  staff       Staff[]
  permissions RolePermission[]

  @@unique([companyId, name])
}

model Staff {
  id          Int               @id @default(autoincrement())
  firstName   String            @db.VarChar(50)
  lastName    String            @db.VarChar(50)
  email       String            @unique @db.VarChar(100)
  isAdmin     Boolean           @default(false)
  company     Company           @relation(fields: [companyId], references: [id])
  companyId   Int
  role        Role              @relation(fields: [roleId], references: [id])
  roleId      Int
  permissions StaffPermission[]
}

model Permission {
  id          Int               @id @default(autoincrement())
  name        String            @unique @db.VarChar(50)
  description String?           @db.Text
  roles       RolePermission[]
  staff       StaffPermission[]
}

model RolePermission {
  role         Role       @relation(fields: [roleId], references: [id])
  roleId       Int
  permission   Permission @relation(fields: [permissionId], references: [id])
  permissionId Int

  @@id([roleId, permissionId])
}

model StaffPermission {
  staff        Staff      @relation(fields: [staffId], references: [id])
  staffId      Int
  permission   Permission @relation(fields: [permissionId], references: [id])
  permissionId Int
  granted      Boolean    @default(true)

  @@id([staffId, permissionId])
}
