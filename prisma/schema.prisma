generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Company {
  id          Int      @id @default(autoincrement())
  title       String   @db.VarChar(100)
  email       String   @unique @db.VarChar(100)
  city        String   @db.VarChar(50)
  address     String   @db.VarChar(100)
  websiteUrl  String?  @db.VarChar(100)
  logo        String?  @db.VarChar(100)
  description String?  @db.Text
  staff       Staff[]
  roles       Role[]
  clients     Client[]
  plans       Plan[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Role {
  id          Int              @id @default(autoincrement())
  name        String           @db.VarChar(50)
  description String?          @db.Text
  company     Company          @relation(fields: [companyId], references: [id], onDelete: Cascade)
  companyId   Int
  staff       StaffRole[]
  permissions RolePermission[]
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt

  @@unique([companyId, name])
}

model Staff {
  id          Int               @id @default(autoincrement())
  firstName   String            @db.VarChar(50)
  lastName    String            @db.VarChar(50)
  email       String            @unique @db.VarChar(100)
  password    String            @db.VarChar(255)
  isAdmin     Boolean           @default(false)
  company     Company           @relation(fields: [companyId], references: [id], onDelete: Cascade)
  companyId   Int
  roles       StaffRole[]
  permissions StaffPermission[]
  customPlans Plan[]
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt
}

model StaffRole {
  staff     Staff    @relation(fields: [staffId], references: [id], onDelete: Cascade)
  staffId   Int
  role      Role     @relation(fields: [roleId], references: [id], onDelete: Cascade)
  roleId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([staffId, roleId])
}

model Permission {
  id          Int               @id @default(autoincrement())
  name        String            @unique @db.VarChar(50)
  description String?           @db.Text
  roles       RolePermission[]
  staff       StaffPermission[]
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt
}

model RolePermission {
  role         Role       @relation(fields: [roleId], references: [id], onDelete: Cascade)
  roleId       Int
  permission   Permission @relation(fields: [permissionId], references: [id], onDelete: Cascade)
  permissionId Int
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt

  @@id([roleId, permissionId])
}

model StaffPermission {
  staff        Staff      @relation(fields: [staffId], references: [id], onDelete: Cascade)
  staffId      Int
  permission   Permission @relation(fields: [permissionId], references: [id], onDelete: Cascade)
  permissionId Int
  granted      Boolean    @default(true)
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt

  @@id([staffId, permissionId])
}

model Client {
  id            Int            @id @default(autoincrement())
  firstName     String         @db.VarChar(50)
  lastName      String         @db.VarChar(50)
  email         String         @unique @db.VarChar(100)
  phoneNumber   String?        @db.VarChar(20)
  dateOfBirth   DateTime?
  gender        GenderType
  company       Company        @relation(fields: [companyId], references: [id], onDelete: Cascade)
  companyId     Int
  subscriptions Subscription[]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}

model Plan {
  id             Int            @id @default(autoincrement())
  name           String         @db.VarChar(100)
  description    String?        @db.Text
  durationInDays Int
  price          Decimal        @db.Decimal(10, 2)
  discountAmount Decimal?       @db.Decimal(10, 2)
  discountType   DiscountType?
  company        Company        @relation(fields: [companyId], references: [id], onDelete: Cascade)
  companyId      Int
  isCustom       Boolean        @default(false)
  trainer        Staff?         @relation(fields: [trainerId], references: [id])
  trainerId      Int?
  subscriptions  Subscription[]
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
}

model Subscription {
  id             Int           @id @default(autoincrement())
  client         Client        @relation(fields: [clientId], references: [id], onDelete: Cascade)
  clientId       Int
  plan           Plan          @relation(fields: [planId], references: [id])
  planId         Int
  startDate      DateTime      @default(now())
  endDate        DateTime
  durationInDays Int
  numberOfCycles Int
  pricePerCycle  Decimal       @db.Decimal(10, 2)
  discountAmount Decimal?      @db.Decimal(10, 2)
  discountType   DiscountType?
  totalPrice     Decimal       @db.Decimal(10, 2)
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
}

enum DiscountType {
  FIXED
  PERCENTAGE
}

enum GenderType {
  MALE
  FEMALE
}
